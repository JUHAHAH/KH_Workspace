-- 1 번 문제
SELECT EMP_ID , EMP_NAME , PHONE , HIRE_DATE , DEPT_TITLE 
FROM EMPLOYEE e 
LEFT JOIN DEPARTMENT d ON(DEPT_CODE = DEPT_ID)
WHERE DEPT_CODE = (	SELECT DEPT_CODE
									FROM EMPLOYEE e2
									WHERE e2.EMP_NAME = '전지연')
AND e.EMP_NAME != '전지연';

-- 2 번 문제
SELECT EMP_ID , EMP_NAME , PHONE , SALARY , JOB_NAME
FROM EMPLOYEE e 
LEFT JOIN JOB USING(JOB_CODE)
WHERE SALARY = (SELECT MAX(SALARY)
								FROM EMPLOYEE e2
								WHERE TO_CHAR(HIRE_DATE, 'yyyy') >= 2000);

-- 3 번 문제
SELECT EMP_ID , EMP_NAME , DEPT_CODE , JOB_CODE , DEPT_TITLE , JOB_NAME
FROM EMPLOYEE e 
LEFT JOIN DEPARTMENT d ON(DEPT_CODE = DEPT_ID)
LEFT JOIN JOB j USING(JOB_CODE)
WHERE (DEPT_ID, JOB_CODE) IN(SELECT DEPT_ID, JOB_CODE
															FROM EMPLOYEE e2
															WHERE EMP_NAME = '노옹철')
AND EMP_NAME != '노옹철';

-- 4 번 문제
SELECT EMP_ID , EMP_NAME , DEPT_CODE , JOB_CODE , HIRE_DATE 
FROM EMPLOYEE e 
WHERE (DEPT_CODE, JOB_CODE) IN(SELECT DEPT_CODE, JOB_CODE
																FROM EMPLOYEE e2
																WHERE TO_CHAR(HIRE_DATE, 'YYYY') = 2000);

-- 5 번 문제
SELECT EMP_ID , EMP_NAME , DEPT_CODE , MANAGER_ID , EMP_NO , HIRE_DATE 
FROM EMPLOYEE e 
WHERE (DEPT_CODE , MANAGER_ID) IN(SELECT DEPT_CODE , MANAGER_ID
															FROM EMPLOYEE e2
															WHERE e.DEPT_CODE = e2.DEPT_CODE
															AND e.MANAGER_ID = e2.MANAGER_ID
															AND SUBSTR(EMP_NO, 8, 1) = 2)
															AND SUBSTR(EMP_NO, 0, 2) = 77;
 
-- 6 번 문제
SELECT EMP_ID , EMP_NAME , NVL(DEPT_CODE, '소속 없음') , JOB_NAME , HIRE_DATE 
FROM EMPLOYEE e 
LEFT JOIN JOB USING(JOB_CODE)
WHERE (NVL(DEPT_CODE, '소속 없음'), HIRE_DATE) IN(SELECT NVL(DEPT_CODE, '소속 없음') , MIN(HIRE_DATE)
																FROM EMPLOYEE e2
																GROUP BY DEPT_CODE)
ORDER BY HIRE_DATE;

-- 7 번 문제
SELECT EMP_ID , EMP_NAME , JOB_NAME , MIN(나이), 연봉
FROM (	SELECT EMP_ID , EMP_NAME , JOB_NAME , 
				FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE((SUBSTR(EMP_NO, 0, 6)))) / 12) 나이,
				TO_CHAR(NVL(((SALARY + BONUS * SALARY) * 12), SALARY * 12), 'l999,999,999') 연봉
				FROM EMPLOYEE e
				LEFT JOIN JOB USING(JOB_CODE))
GROUP BY JOB_NAME, EMP_ID , EMP_NAME , 연봉	, 나이			
ORDER BY 나이 DESC;












